name: Release
on: 
  workflow_dispatch:
    inputs:
      ReleaseHeader:
        description: The header to be added to the release.
        required: false
jobs:
  Release:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set Variables
        run: |
          "BARE_REPOSITORY=$($env:GITHUB_REPOSITORY.split("/")[1])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          $ModuleManifest = Get-ChildItem -Path $env:GITHUB_WORKSPACE -Include *.psm1 -Recurse
          "MODULE_PATH=$($ModuleManifest.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
      - name: Update Changelog
        id: changelog
        uses: natescherer/changelog-management-action@v1
        with:
          mode: release
          releaseVersion: ${{ steps.gitversion.outputs.SemVer }}
      - name: Update PowerShell Metadata
        uses: natescherer/update-powershell-metadata-action@v2
        with:
          path: src
          version: ${{ steps.gitversion.outputs.SemVer }}
          copyright: (c) YYYY Nate Scherer. All rights reserved.
          releaseNotes: ${{ steps.changelog.outputs.releasenotes }}
          functionsToExportPath: src\public
          description: ${{ steps.metadata.outputs.description }}
      - name: Generate Markdown Help Files # Evaluate using HelpOut. Get rid of BARE_REPOSITORY & MODULE_PATH
        run: |
          $DocsPath = Join-Path $env:GITHUB_WORKSPACE docs
          if (Test-Path -Path $DocsPath) {
            $CleanPath = Join-Path $DocsPath "*"
            Remove-Item -Path $CleanPath
          } else {
            New-Item -Path $DocsPath -ItemType Directory | Out-Null
          }
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module -Name platyPS
          Get-Module -Name $env:BARE_REPOSITORY -All | Remove-Module -Force -ErrorAction Ignore
          Import-Module -Name $env:MODULE_PATH -Force -ErrorAction Stop
          New-MarkdownHelp -Module $env:BARE_REPOSITORY -OutputFolder $DocsPath | Out-Null
      - name: Push SemVer Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: v${{ steps.gitversion.outputs.SemVer }}
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          base: main
          commit-message: Release v${{ steps.gitversion.outputs.SemVer }}
          branch: release/v${{ steps.gitversion.outputs.SemVer }}
          delete-branch: true
          title: Release v${{ steps.gitversion.outputs.SemVer }}
      - name: Copy 'src' to 'out'
        run: |
          $CopySourcePath = Join-Path $env:GITHUB_WORKSPACE "src" "*"
          $CopyDestPath = Join-Path $env:GITHUB_WORKSPACE "out"
          Copy-Item -Path "$CopySourcePath" -Destination $CopyDestPath -Recurse
      - name: Create HTML Doc to Embed in Release
        uses: natescherer/markdown-to-html-with-github-style-action@v1.1.0
        with:
          path: README.md,CHANGELOG.md,docs
          outputpath: out
          matchpathstructure: true
      - name: Compress module for GitHub release # Replace this and the next with publish-powershell-action
        id: compress
        run: |
          Replace
          Me
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ steps.gitversion.outputs.SemVer }}
          tag_name: v${{ steps.gitversion.outputs.SemVer }}
          files: ${{ steps.compress.outputs.ZipPath }}
          body: |
            # Release v${{ steps.gitversion.outputs.SemVer }}
            ${{ github.event.inputs.ReleaseHeader}}

            ## Changes
            ${{ steps.changelog.outputs.releasenotes }}
      - name: Publish Module to Gallery
        uses: natescherer/publish-powershell-action@v1
        with:
          token: ${{ secrets.POWERSHELLGALLERY_KEY }}
          target: gallery
          path: out